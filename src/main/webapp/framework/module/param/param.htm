<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML xmlns:ToolBar xmlns:WorkSpace xmlns:Tree xmlns:Grid xmlns:XForm>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>参数管理</title>

<link href="../../css/css.css" rel="stylesheet" type="text/css"></link>
<link href="../../menu/menu.css" rel="stylesheet" type="text/css"></link>
<link href="../../balloon/balloon.css" rel="stylesheet" type="text/css"></link>
<link href="../../workspace/workspace.css" rel="stylesheet" type="text/css"></link>
<link href="../../tree/tree.css" rel="stylesheet" type="text/css"></link>
<link href="../../xform/xform.css" rel="stylesheet" type="text/css"></link>

<script language="javascript" src="../../core.js"></script>
<script language="javascript" src="../../ajax.js"></script>
<script language="javascript" src="../../framework.js"></script>
<script language="javascript" src="../../menu/menu.js"></script>
<script language="javascript" src="../../balloon/balloon.js"></script>
<script language="javascript" src="../../workspace/workspace.js"></script>
<script language="javascript" src="../../tree/tree.js"></script>
<script language="javascript" src="../../xform/xform.js"></script>

<style>
  #palette {
    width: 250px;
  }
</style> 

<SCRIPT type="text/javascript">
<!--
	
	URL_CORE = "../../";

	ICON = "images/";
    
    /* 后台响应数据节点名称  */
    XML_MAIN_TREE  = "ParamTree";
    XML_PARAM_LIST = "ParamList";
    XML_PARAM_INFO = "ParamInfo";
   
    /* 
	 * XMLHTTP请求地址汇总 
	 */
	URL_INIT          = NO_AUTH_PATH + "param/list";
    URL_PARAM_DETAIL  = NO_AUTH_PATH + "param/detail";
	URL_SAVE_PARAM    = NO_AUTH_PATH + "param";
    URL_PARAM_DELETE  = NO_AUTH_PATH + "param/";
    URL_PARAM_DISABLE = NO_AUTH_PATH + "param/disable/";
    URL_SORT_PARAM    = NO_AUTH_PATH + "param/sort/";
    URL_COPY_PARAM    = NO_AUTH_PATH + "param/copy/";
    URL_MOVE_PARAM_TO = NO_AUTH_PATH + "param/move/";
	
	if(IS_TEST) {
		URL_INIT = "data/param_init.xml?";
		URL_PARAM_DETAIL = "data/param1.xml?";
		URL_PARAM_DELETE = "data/_success.xml?";
		URL_PARAM_DISABLE = "data/_success.xml?";
		URL_SAVE_PARAM = "data/_success.xml?";
		URL_SORT_PARAM = "data/_success.xml?";
		URL_COPY_PARAM = "data/_success.xml?";
		URL_MOVE_PARAM_TO = "data/_success.xml?";
	}

    function init() {
        initPaletteResize();
        initNaviBar("param");
        initMenus();
        initWorkSpace();
        initEvents();

        loadInitData();
    }
 
    function initMenus() {
        var item1 = {
            label:"新建参数",
            visible:function() {return "0" == getTreeNodeType();}
        }
        var item2 = {
            label:"删除",
            callback:delParam,
            icon:ICON + "del.gif",
            visible:function() {return !isTreeRoot();}
        }
        var item3 = {
            label:"编辑",
            callback:editParamInfo,
            icon:ICON + "edit.gif",
            visible:function() {return !isTreeRoot();}
        }
        var item4 = {
            label:"启用",
            callback:enableParam,
            icon:ICON + "start.gif",
            visible:function() {return !isTreeRoot() && isTreeNodeDisabled();}
        }
        var item5 = {
            label:"停用",
            callback:disableParam,
            icon:ICON + "stop.gif",
            visible:function() {return !isTreeRoot() && !isTreeNodeDisabled();}
        }
        var item7 = {
            label:"新建参数组",
            callback:function() {
                addNewParam("0");
            },
            visible:function() {return ("0" == getTreeNodeType() || isTreeRoot());}
        }
        var item9 = {
            label:"复制",
            callback:copyParam,
            icon:ICON + "copy.gif",
            visible:function() {return "1" == getTreeNodeType();}
        }
        var item11 = {
            label:"复制到...",
            callback:copyParamTo,
            icon:ICON + "copy_to.gif",
            visible:function() {return "1" == getTreeNodeType();}
        }
        var item12 = {
            label:"移动到...",
            callback:moveParamTo,
            icon:ICON + "move.gif",
            visible:function() {return "1" == getTreeNodeType();}
        }
        var item13 = {
            label:"查看",
            callback:function() {
                editParamInfo(false);
            },
            icon:ICON + "view.gif",
            visible:function() {return !isTreeRoot();}
        }
        var item14 = {
            label:"新建参数项",
            callback:function() {
                addNewParam("2");
            },
            visible:function() {return (("1"==getTreeNodeMode() && "1"==getTreeNodeType()) || "2"==getTreeNodeMode());}
        }


        //新建参数子菜单
        var subitem1_1 = {
            label:"简单型",
            callback:function() {
                addNewParam("1", "0");
            }
        }
        var subitem1_2 = {
            label:"下拉型",
            callback:function() {
                addNewParam("1", "1");
            }
        }
        var subitem1_3 = {
            label:"树型",
            callback:function() {
                addNewParam("1", "2");
            }
        }
        var submenu1 = new Menu();
        submenu1.addItem(subitem1_1);
        submenu1.addItem(subitem1_2);
        submenu1.addItem(subitem1_3);
        item1.submenu = submenu1;        

        var menu1 = new Menu();
        menu1.addItem(item4);
        menu1.addItem(item5);
        menu1.addSeparator();
        menu1.addItem(item13);
        menu1.addItem(item3);
        menu1.addItem(item2);
        menu1.addItem(item9);
        menu1.addItem(item11);
        menu1.addItem(item12);
        menu1.addSeparator();
        menu1.addItem(item7);
        menu1.addItem(item1);
        menu1.addItem(item14);

        $$("tree").contextmenu = menu1;
    }

	function loadInitData() {
		Ajax({
			url : URL_INIT,
			onresult : function() { 
				$T("tree", this.getNodeValue(XML_MAIN_TREE)); 

				var treeObj = $$("tree");
				treeObj.onTreeNodeDoubleClick = function(eventObj) {
					if( !isTreeRoot() ) {
						editParamInfo();
					}
				}
				treeObj.onTreeNodeMoved = function(eventObj) {
					sortTreeNode(URL_SORT_PARAM, eventObj);
				}
				treeObj.onTreeNodeRightClick = function(eventObj) {
					$$("tree").contextmenu.show(eventObj.clientX, eventObj.clientY); 
				}	 
			}
		});
    }

    /* 编辑参数信息 */
    function editParamInfo(editable) {
        var tree = $T("tree");
        var treeNode = tree.getActiveTreeNode();
        if( treeNode ) {
            var treeID   = treeNode.getId();
            var treeName = treeNode.getName();
            var type = getTreeNodeType();
			var mode = getTreeNodeMode();

            var callback = {};
            callback.onTabChange = function() {
                setTimeout(function() {
                    loadTreeDetailData(treeID, editable, treeID, type, mode);
                }, TIMEOUT_TAB_CHANGE);
            };

            var inf = {};
            if(editable) {
				inf.label = OPERATION_EDIT.replace(/\$label/i, treeName);
            } else {
                inf.label = OPERATION_VIEW.replace(/\$label/i, treeName);
                
            }
			inf.SID = treeID;
            inf.defaultPage = "page1";
            inf.phases = null;
            inf.callback = callback;
            var tab = ws.open(inf);
        }
    }

	/*
     *	新建参数
     *	参数：  string:type         节点类型(0参数组/1参数/2参数项)
                string:mode         参数项类型(0简单型/1下拉型/2树型)
     */
    function addNewParam(type, mode) {
        switch(type) {
            case "0":
                var treeName = "参数组";
                break;
            case "1":
                var treeName = "参数";
                break;
            case "2":
                var treeName = "参数项";
                break;
        }

        var tree = $T("tree");
        var treeNode = tree.getActiveTreeNode();
        if(treeNode) {
            var parentID = treeNode.getId();

            var callback = {};
            callback.onTabChange = function() {
                setTimeout(function() {
                    loadTreeDetailData(null, true, parentID, type, mode);
                }, TIMEOUT_TAB_CHANGE);
            };

            var inf = {};
            inf.defaultPage = "page1";
            inf.label = OPERATION_ADD.replace(/\$label/i,treeName);
            inf.phases = null;
            inf.callback = callback;
            inf.SID = new Date().valueOf();
            var tab = ws.open(inf);
        }
    }

    /*
     *	树节点数据详细信息加载数据
     *	参数：	string:treeID               树节点id
                boolean:editable            是否可编辑(默认true)
                string:parentID             父节点id
                boolean:type                节点类型(0参数组/1参数/2参数项)
     */
    function loadTreeDetailData(treeID, editable, parentID, type, mode) {
		var params = {};
		params["type"] = type;
		params["mode"] = mode || 0;
		if(treeID) {
		    params["paramId"] = treeID;			
		} else {
			params["parentId"] = parentID;
		}

		Ajax({
			url : URL_PARAM_DETAIL,
			method : "POST",
			contents : params,
			onresult : function() { 
				var paramInfoNode = this.getNodeValue(XML_PARAM_INFO);
				Cache.XmlDatas.add(treeID, paramInfoNode);
				
				var xform = $X("page1Form", paramInfoNode);
				xform.setEditable(editable ? "true" : "false");

				attachReminder(treeID, xform); // 离开提醒
	 
				// 设置保存按钮操作
				var page1BtSaveObj = $$("page1BtSave");
				page1BtSaveObj.onclick = function() {
					saveParam(treeID, parentID, type);
				}
			}
		});
    }

    /*
     *	保存参数
     *	参数：	string:cacheID          缓存数据id
                string:parentID         父节点id
                boolean:type            节点类型(0参数组/1参数/2参数项)
     */
    function saveParam(cacheID, parentID, type) {
        var xform = $X("page1Form");	
        if( !xform.checkForm() ) {
            return;
        }

        var p = new HttpRequestParams();
        p.url = URL_SAVE_PARAM;
        p.addParam("type", type);

        //是否提交
        var flag = false;
        
		//参数基本信息
		var paramInfoNode = Cache.XmlDatas.get(cacheID);
		if( paramInfoNode ) {
			var paramInfoDataNode = paramInfoNode.selectSingleNode(".//data");
			if( paramInfoDataNode ) {
				flag = true;
				p.setXFormContent(paramInfoDataNode);
			}
		}
 
        if( flag ) {
            var request = new HttpRequest(p);
           
            syncButton([$$("page1BtSave")], request); // 同步按钮状态
			detachReminder(cacheID); // 解除提醒

            request.onresult = function() {                  
				var treeNode = this.getNodeValue(XML_MAIN_TREE).selectSingleNode("treeNode");
				appendTreeNode(parentID, treeNode);

				ws.closeActiveTab();
            }

            request.onsuccess = function() { // 更新树节点名称
				if("1" == type) {
					var name = xform.getData("name");
					if( isNullOrEmpty(name) ) {
						name = xform.getData("code");
					}
					modifyTreeNode(cacheID, "name", name, true);
				} 
				if("2" == type ) {
					var text = xform.getData("text");
					if( isNullOrEmpty(text) ) {
						text = xform.getData("value");
					}
					modifyTreeNode(cacheID, "name", text, true);
				}

				ws.closeActiveTab();
            }
            request.send();
        }
    }
 
    function delParam() {
		 delTreeNode(URL_PARAM_DELETE);
    }
 
    function getTreeNodeType() {
        return getTreeAttribute("type");
    }
 
    function getTreeNodeMode() {
        return getTreeAttribute("mode");
    }

	function enableParam() {
		stopOrStartTreeNode("0", URL_PARAM_DISABLE);
	}
    function disableParam() {
        stopOrStartTreeNode("1", URL_PARAM_DISABLE);
    }
 
 
    function copyParam() {
        var treeNode = $T("tree").getActiveTreeNode();
		var parentId = treeNode.getParent().getId();

		Ajax({
			url : URL_COPY_PARAM + treeNode.getId() + "/" + parentId,
			onresult : function() { 
				var treeNode = this.getNodeValue(XML_MAIN_TREE).selectSingleNode("treeNode");
                appendTreeNode(parentId, treeNode);
			}
		});
    }
 
    function copyParamTo() {
        var treeNode = $T("tree").getActiveTreeNode();
		var id = treeNode.getId();
		var name = treeNode.getName();
		var parentID = treeNode.getParent().getId();

		var params = { id:id, parentID:parentID };
		var targetParent = window.showModalDialog("paramtree.htm", {params:params, title:"将【\"" + name + "\"】复制到"}, "dialogWidth:300px;dialogHeight:400px;");
		
		if( targetParent ) {
			var targetParentId = targetParent.id;
			Ajax({
				url : URL_COPY_PARAM + id + "/" + targetParentId,
				onresult : function() { 
					var newNode = this.getNodeValue(XML_MAIN_TREE).selectSingleNode("treeNode");
					appendTreeNode(targetParentId, newNode);
				}
			});
		}
    }
 
    function moveParamTo() {
		var tree = $T("tree");
        var treeNode = tree.getActiveTreeNode();
		var id = treeNode.getId();
		var name = treeNode.getName();
		var parentID = treeNode.getParent().getId();

		var params = { id:id, parentID:parentID };
		var targetParent = window.showModalDialog("paramtree.htm", {params:params, title:"将\"" + name + "\"移动到"},"dialogWidth:300px;dialogHeight:400px;");
		if(targetParent) {
			var targetParentId = targetParent.id;
			moveTreeNode(tree, id, targetParentId, URL_MOVE_PARAM_TO);
		}
    }
	

    window.onload = init;

//-->
</SCRIPT>

</head>

<body>

<!-- 版面 开始 -->
<table class="panel" >
  <tr class="header"> 
	<td class="left"></td>
	<td class="center"></td>
	<td class="right"></td>
  </tr>
  <tr class="body"> 
	<td class="left"></td>
	<td class="center">
	  <!-- 版面内容 开始 -->
	  <table class="full" >
		<tr class="hidden"> 
		  <td height="20">
		    <table class="hFull">
			  <tr> 
				<td> 
				  <!-- 主菜单 开始 -->
				  <div id="navibar"><div class="loading"></div></div>
				  <!-- 主菜单 结束 -->
				</td>
				<td width="150" align="right">&nbsp;</td>
			  </tr>
			</table></td>
		</tr>
		<tr class="hidden"> 
		  <td class="separator"></td>
		</tr>
		<tr> 
		  <td valign="top">
			<table class="full" >
			  <tr> 
				<td id="palette">
				  <!-- 左栏 开始 -->
				  <table class="full border" >
					<tr id="treeTitle" class="bar"> 
					  <td class="opened">
						<span class="icon"></span>参数列表<span class="button refresh" id="treeBtRefresh" title="刷新"></span>
					  </td>
					</tr>
					<tr>
					  <td id="treeContainer">
						 <Tree:Box id="tree" treeType="menu" baseurl="../../tree/" canMoveNode="true"><div class="loading"></div></Tree:Box>
					  </td>
					</tr>
				  </table>                        
				  <!-- 左栏 结束 -->
				</td>
				<td class="groove"> 
					<WorkSpace:Box id="ws" baseurl="../../workspace/">
					  <!-- page1 开始 -->
					  <WorkSpace:Page id="page1">
						  <XForm:Box id="page1Form" baseurl="../../xform/"><div class="loading"></div></XForm:Box>
						  <WorkSpace:PageStep>
							<input type="button" class="btStrong" value="完成" id="page1BtSave"/>
						  </WorkSpace:PageStep>
					  </WorkSpace:Page>
					</WorkSpace:Box>
				</td>
			  </tr>
			</table></td>
		</tr>
	  </table>            
	  <!-- 版面内容 结束 -->
	</td>
	<td class="right"></td>
  </tr>
  <tr class="footer"> 
	<td class="left"></td>
	<td class="center"></td>
	<td class="right"></td>
  </tr>
</table>
<!-- 版面 结束 -->

</body>
</html>
