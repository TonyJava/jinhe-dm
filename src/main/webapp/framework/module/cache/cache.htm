<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML xmlns:ToolBar xmlns:WorkSpace xmlns:Tree xmlns:Grid xmlns:XForm>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>缓存管理</title>

<link href="../../css/css.css" rel="stylesheet" type="text/css"></link>
<link href="../../menu/menu.css" rel="stylesheet" type="text/css"></link>
<link href="../../balloon/balloon.css" rel="stylesheet" type="text/css"></link>
<link href="../../tree/tree.css" rel="stylesheet" type="text/css"></link>
<link href="../../grid/grid.css" rel="stylesheet" type="text/css"></link>
<link href="../../xform/xform.css" rel="stylesheet" type="text/css"></link>

<script language="javascript" src="../../core.js"></script>
<script language="javascript" src="../../ajax.js"></script>
<script language="javascript" src="../../framework.js"></script>
<script language="javascript" src="../../menu/menu.js"></script>
<script language="javascript" src="../../balloon/balloon.js"></script>
<script language="javascript" src="../../tree/tree.js"></script>
<script language="javascript" src="../../grid/grid.js"></script>
<script language="javascript" src="../../xform/xform.js"></script>

<style>
  #page1FormDiv {
    display:none;
    background-color: #BEC6EE;
    border:1px solid #416371;
    position: absolute;
    width: 600;    
    height: 320;  
    margin-left: 200;
    margin-top: 200;
    padding: 10px 10px 10px 10px;
  }
</style>

<SCRIPT type="text/javascript">
<!--
	
	/* 框架包相对路径 */
	if(IS_TEST) URL_CORE = "../../"; 

	/* 后台响应数据节点名称  */
	XML_MAIN_TREE = "CacheTree";
	XML_MAIN_GRID = "PoolGrid";
	XML_HIT_RATE  = "HitRate";
	XML_CACHE_ITEMS = "CacheItemList";
	XML_CACHE_STRATEGY  = "CacheStrategy";

	/* XMLHTTP请求地址汇总  */
	URL_INIT_TREE    = NO_AUTH_PATH + "cache/list";
	URL_INIT_GRID    = NO_AUTH_PATH + "cache/grid";
	URL_CACHE_DETAIL = NO_AUTH_PATH + "cache/list/";
	URL_VIEW_ITEM    = NO_AUTH_PATH + "cache/item";
	URL_CACHE_CLEAR  = NO_AUTH_PATH + "cache/release";
	URL_CACHE_INIT   = NO_AUTH_PATH + "cache/init";	
	
	if(IS_TEST) {
		URL_INIT_TREE    = "data/cache_tree.xml?";
		URL_INIT_GRID    = "data/cache_grid.xml?";
		URL_CACHE_DETAIL = "data/cache1.xml?";
		URL_CACHE_CLEAR  = "data/_success.xml?";
		URL_CACHE_INIT   = "data/_success.xml?";
		URL_VIEW_ITEM    = "data/item.xml?";
	}	
	 
	/*页面初始化 */
	function init() {
		initPaletteResize();
		initNaviBar("cache");
		initMenus();
		initEvents();

		Element.moveable($$("page1FormDiv"));

		loadInitData();
		loadInitGrid();
	}

	/* 点击树刷新按钮 */
	function onClickTreeBtRefresh() {
		loadInitData();
		loadInitGrid();

		$$("page1HitRate").innerHTML = "";
	}

	/* 页面初始化加载数据(包括工具条、菜单树) */
	function loadInitData() {
		var onresult = function() {
			var mainTreeXML = this.getNodeValue(XML_MAIN_TREE);
					
			var tree = $T("tree", mainTreeXML); 
			
			// 添加自定义树事件
			var treeElement = $$("tree");
			treeElement.onTreeNodeDoubleClick = function(eventObj) {
				if( !isTreeRoot() ) {
					showCachePools();
				}
			}
			treeElement.onTreeNodeRightClick = function(eventObj) {
				onTreeNodeRightClick(eventObj);
			}
		}

		// 初始化左边树
		Ajax({url : URL_INIT_TREE, onresult : onresult});
	}

	// 初始化右边Grid
	function loadInitGrid() {
		Ajax({
			url : URL_INIT_GRID, 
			onresult : function() {
				var gridDataXML = this.getNodeValue(XML_MAIN_GRID);
				if( gridDataXML ) {
					var grid = $G("page1Grid", gridDataXML);    
				}		
			}
		});
	}

	/* 右击树节点  */
	function onTreeNodeRightClick(eventObj) {
		// 延时一会，等onTreeNodeActived事件先执行完
		setTimeout(function() {
			var tree = $$("tree");
			if( tree.contextmenu ) {
				tree.contextmenu.show(eventObj.clientX, eventObj.clientY);                
			}
		}, 100);
	}

	function initMenus() {
		var item1 = {
			label:"维护",
			callback:showCachePools,
			icon:"images/edit.gif",
			visible:function() {return !isTreeRoot();}
		}
		var item2 = {
			label:"初始化",
			callback:initCache,
			icon:"images/init.gif",
			visible:function() {return !isTreeRoot() && isCacheReleased();}
		}
		var item3 = {
			label:"清空",
			callback:clearCache,
			icon:"images/clear.gif",
			visible:function() {return !isTreeRoot();}
		}

		var menu = new Menu();
		menu.addItem(item1);
		menu.addSeparator();
		menu.addItem(item2);
		menu.addItem(item3);

		$$("tree").contextmenu = menu;
	}
 
	function isCacheReleased() {
		return getTreeAttribute("released") == "1";
	}

	/* 初始化缓存池  */
	function initCache() {
		var tree = $T("tree");
		var treeNode = tree.getActiveTreeNode();
		if ( treeNode ) {
			var treeID = treeNode.getId();
			Ajax({
				url : URL_CACHE_INIT + "/" + treeID,
				onsuccess : function() {
					treeNode.setAttribute("released", "0");
					tree.reload();
					showCachePools();
				}
			});
		}
	}

	/* 清空缓存池  */
	function clearCache() {
		var tree = $T("tree");
		var treeNode = tree.getActiveTreeNode();
		if ( treeNode ) {
			var treeID = treeNode.getId();
			Ajax({
				url : URL_CACHE_CLEAR + "/" + treeID,
				onsuccess : function() {
					treeNode.setAttribute("released", "1");   
					tree.reload();
					showCachePools();
				}
			});
		}
	}

	/*
	 *	缓存池详细信息 
	 *	参数：	string:page                 页码
				boolean:showStrategy        false的话只刷新grid列表
	 */
	function showCachePools(page, justRefreshGrid) {
		var tree = $T("tree");
		var treeNode = tree.getActiveTreeNode();
		var treeID = treeNode.getId();
		var treeName = treeNode.getName();

		var onresult = function() {
			var strategyXML = this.getNodeValue(XML_CACHE_STRATEGY);
			if( strategyXML && !justRefreshGrid) {
				$X("page1Form", strategyXML);
			}

			createGridToolBar(this.getNodeValue(XML_PAGE_INFO)); // 重新创建grid工具条

			var gridDataXML = this.getNodeValue(XML_CACHE_ITEMS);
			if( gridDataXML ) {
				var grid = $G("page1Grid", gridDataXML);    
				initGridMenuAndEvents();
			}		
			
			//设置点击率
			var hitRateData = this.getNodeValue(XML_HIT_RATE);
			if( hitRateData ) {
				$$("page1HitRate").innerHTML = "『 " + treeName + "-命中率：" + hitRateData + " 』";
				$$("page1HitRate").onclick = function() {
					var formObj = $$("page1FormDiv");
			        Element.show(formObj);
			        $$("page1FormClose").onclick = function() {
			            Element.hide(formObj);
			        }
				}
			}
		}
		
		Ajax({
			url : URL_CACHE_DETAIL + treeID,
			onresult :onresult
		});
	}
	 
	/* 创建grid工具条 */
	function createGridToolBar(xmlData) {
		if( xmlData ) {
			initGridToolBar($$("gridToolBar"), xmlData, refreshGrid);

			function refreshGrid(page) {
				showCachePools(page, true);
			}
		}
	}

	/* Grid菜单初始化 */
	function initGridMenuAndEvents() {
		var item1 = {
			label:"查看缓存项信息",
			callback:showItemInfo,
			icon:"images/view.gif"
		}
		var item2 = {
			label:"清除缓存项",
			callback:removeCacheItem,
			icon:"images/clear.gif"
		}

		var menu = new Menu();
		menu.addItem(item1);
		menu.addItem(item2);

		var gridObj = $$("page1Grid");
		gridObj.contextmenu = menu;

		/* grid绑定事件 */
		gridObj.onRightClickRow = function(eventObj) {
			gridObj.contextmenu.show(event.clientX, event.clientY);
		}
	}

	/* 查看缓存项信息  */
	function showItemInfo() { 
		var itemKey = $G("page1Grid").getRowAttributeValue("key");
		var poolCode = getTreeNodeId();
		var url = URL_VIEW_ITEM + "/" + poolCode + "?key=" + itemKey;
		window.open(url, "查看缓存项信息", "");
	}

	function removeCacheItem() {
		var itemKey = $G("page1Grid").getRowAttributeValue("key");
		var poolCode = getTreeNodeId();
		Ajax({
			url : URL_VIEW_ITEM + "/" + poolCode + "?key=" + itemKey,
			method : "DELETE",
			onsuccess : function() {
				 $G("page1Grid").deleteSelectedRow();
			}
		});
	}


	window.onload = init;

//-->
</SCRIPT>

</head>

<body>

<!-- 版面 开始 -->
<table class="panel">
  <tr class="header"> 
	<td class="left"></td>
	<td class="center"></td>
	<td class="right"></td>
  </tr>
  <tr class="body"> 
	<td class="left"></td>
	<td class="center">
	  <!-- 版面内容 开始 -->
	  <table class="full">
		<tr class="hidden"> 
		  <td height="20"><table class="hFull">
			  <tr> 
				<td> 
				  <div id="navibar"><div class="loading"></div></div>
				</td>
			  </tr>
			</table></td>
		</tr>
		<tr class="hidden"> 
		  <td class="separator"></td>
		</tr>
		<tr> 
		  <td valign="top">
			<table class="full">
			  <tr> 
				<td id="palette">
				  <!-- 左栏 开始 -->
				  <table class="full border">
					<tr id="treeTitle" class="bar"> 
					  <td class="opened">
						<span class="icon"></span>缓存池<span class="button refresh" id="treeBtRefresh" title="刷新"></span>
					  </td>
					</tr>
					<tr>
					  <td id="treeContainer">
						<Tree:Box id="tree" treeType="menu" baseurl="../../tree/"><div class="loading"></div></Tree:Box>
					  </td>
					</tr>
				  </table>                        
				  <!-- 左栏 结束 -->
				</td>
				<td class="groove">
					<table class="full">
						<tr class="tf" height="20">
						  <td id="gridTitle" style="font-weight:normal">※缓存池明细
							<span id="page1HitRate" style="left:60px;top:4px;font-weight:bold;"></span>
							<span class="buttonBox" id="gridToolBar"></span></td>
						</tr>
						<tr>
						  <td>
							<Grid:Box id="page1Grid" baseurl="../../grid/"></Grid:Box>
						  </td>
						</tr>
					</table>                            
				</td>
			  </tr>
			</table></td>
		</tr>
	  </table>            
	  <!-- 版面内容 结束 -->
	</td>
	<td class="right"></td>
  </tr>
  <tr class="footer"> 
	<td class="left"></td>
	<td class="center"></td>
	<td class="right"></td>
  </tr>
</table>
<!-- 版面 结束 -->
 
  <div id="page1FormDiv">
    <XForm:Box id="page1Form" baseurl="../../xform/" editable="true"></XForm:Box>    
    <div class="bt">
    	<input type="button" class="btStrong" value="隐藏" id="page1FormClose"/>
     </div>
  </div>

</body>
</html>